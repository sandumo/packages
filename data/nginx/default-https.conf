server {
  listen 80 default_server;
  listen [::]:80 default_server;
  server_name jobber.md www.jobber.md;
  server_tokens off;

  location /.well-known/acme-challenge/ {
    root /var/www/certbot;
  }

  location /healthcheck {
    add_header Content-Type application/json;
    return 200 '{"messsage":"ok"}';
  }

  location / {
    return 301 https://jobber.md$request_uri;
  }
}

server {
  server_name www.jobber.md;
  listen 443 ssl; # managed by Certbot
  ssl_certificate /etc/letsencrypt/live/jobber.md/fullchain.pem; # managed by Certbot
  ssl_certificate_key /etc/letsencrypt/live/jobber.md/privkey.pem; # managed by Certbot
  include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
  ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

  return 301 https://jobber.md$request_uri;
}

server {
  allow 127.0.0.1;
  allow 192.168.64.1;
  allow 95.65.23.125; # Sandu
  allow 52.211.217.158; # Sandu Proxy
  allow 217.26.172.205; # Livia
  allow 95.65.47.23; # Livia
  allow 77.89.250.83; # Victor
  allow 5.32.168.150; # Victor
  allow 188.0.239.221; # Andrei
  allow 77.89.250.83; # Andrei
  allow 93.113.64.236; # Andrei
  allow 188.138.239.25; # Andrei
  deny all;

  error_page 403 /under_construction.html;
  location = /under_construction.html {
    root /var/www/html;
    allow all;
  }

  server_name jobber.md;

  listen [::]:443 ssl ipv6only=on; # managed by Certbot
  listen 443 ssl; # managed by Certbot
  ssl_certificate /etc/letsencrypt/live/jobber.md/fullchain.pem; # managed by Certbot
  ssl_certificate_key /etc/letsencrypt/live/jobber.md/privkey.pem; # managed by Certbot
  include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
  ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

  location ~ ^/api(.*)$ {
    proxy_read_timeout 1800;

    rewrite ^/api(.*)$ $1 break;

    proxy_set_header Host $host;
    proxy_pass_request_headers on;
    proxy_pass http://api:3001;
  }

  location / {
    proxy_read_timeout 1800;

    proxy_set_header Host $host;
    proxy_pass_request_headers on;
    proxy_pass http://web:3000;
  }
}
